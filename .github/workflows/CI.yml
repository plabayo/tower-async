name: CI

on:
  push:
    branches:
    - master
  pull_request: {}

env:
  RUST_TOOLCHAIN: nightly-2023-07-08

jobs:
  check-nightly:
    # Run `cargo check` first to ensure that the pushed code at least compiles.
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{env.RUST_TOOLCHAIN}}
        profile: minimal
        override: true
    - name: Check
      uses: actions-rs/cargo@v1
      with:
        command: check
        args: --workspace --all-features --all-targets

  check-docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{env.RUST_TOOLCHAIN}}
        profile: minimal
    - name: cargo doc
      env:
        RUSTDOCFLAGS: "-D rustdoc::broken_intra_doc_links"
      run: cargo doc --all-features --no-deps

  cargo-hack:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
    - name: install cargo-hack
      uses: taiki-e/install-action@cargo-hack
    - name: cargo hack check
      run: cargo hack check --each-feature --no-dev-deps --workspace

  test:
    needs: check-nightly
    runs-on: ubuntu-latest
    strategy:
      # Disable fail-fast. If the test run for a particular Rust version fails,
      # don't cancel the other test runs, so that we can determine whether a
      # failure only occurs on a particular version.
      fail-fast: false
    steps:
    - uses: actions/checkout@master
    - name: "install Rust"
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{env.RUST_TOOLCHAIN}}
        profile: minimal
        override: true
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --workspace --all-features

  style:
    needs: check-nightly
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{env.RUST_TOOLCHAIN}}
        components: rustfmt
        profile: minimal
    - name: rustfmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
